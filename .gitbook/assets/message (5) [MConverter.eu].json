{
    "openapi":"3.0.0",
    "info":{
        "title":"beaconcha.in Multi EVM API",
        "description":"Supported networks: Ethereum (CL+EL), Gnosis (EL), Optimism.",
        "version":2.3.18.sonic,
        "contact":{
            
        }
    },
    "servers":[
        {
            "url":"https://beaconcha.in/api"
        }
    ],
    "paths":{
        "/v2/healthz":{
            "get":{
                "description":"Health endpoint for monitoring whether the explorer is synchronized.",
                "tags":[
                    "Health"
                ],
                "summary":"Health of the explorer",
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "text/plain":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "$ref":"#/components/schemas/APIHealthResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/healthz-loadbalancer":{
            "get":{
                "description":"Health endpoint for monitoring whether the explorer-api maintains a healthy connection to the database.",
                "tags":[
                    "Health"
                ],
                "summary":"Health of the explorer-api",
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "text/plain":{
                                "schema":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/epochs":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns summaries of the latest X epochs by default.",
                "operationId":"1",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/EpochNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/FinalityParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumEpochResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/blocks":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer",
                    "Ethereum Execution Layer"
                ],
                "description":"For simplicity, 'Slot' refers to consensus layer blocks and 'Block' to execution layer blocks (also known as 'payload'). \n\n Returns the latest X blocks by default.",
                "operationId":"20",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/BlockNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SlotNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/BlockHashesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SlotHashesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PriorityFeeRecipientsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ProposerRewardRecipientsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/BlockStatusesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/FinalityParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumBlockResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/batches":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"Returns an array of state batches.",
                "operationId":"63",
                "parameters":[
                    {
                        "name":"startBatch",
                        "in":"query",
                        "description":"Only returns batches after this batch number",
                        "schema":{
                            "type":"integer"
                        }
                    },
                    {
                        "name":"endBatch",
                        "in":"query",
                        "description":"Only return batches before this batch number",
                        "schema":{
                            "type":"integer"
                        }
                    },
                    {
                        "name":"day",
                        "in":"query",
                        "description":"Only return batches from this day",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismBatchResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/blocks":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"For simplicity, 'Slot' refers to consensus layer blocks and 'Block' to execution layer blocks (also known as 'payload'). \n\n Returns the latest X blocks by default.",
                "operationId":"21",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/BlockNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SlotNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/BlockHashesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SlotHashesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PriorityFeeRecipientsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ProposerRewardRecipientsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/BlockStatusesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/FinalityParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismBlockResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/validators":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest X validators by default. If the exit epoch is shown as 9223372036854775807, it means the validator has not exited yet.",
                "operationId":"3",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/DepositAddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/WithdrawalCredentialsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/WithdrawalAddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorStatusesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumValidatorResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/validator-statuses":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns a summary of all validator statuses of the latest epoch by default.",
                "operationId":"343",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/FinalityParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "$ref":"#/components/schemas/EthereumValidatorStatusesResponse"
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/attestations":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns attestations for specified query parameters.",
                "operationId":"12",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/SlotNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EpochNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumAttestationResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/aggregated-attestations":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns aggregated attestations for specified query parameters.",
                "operationId":"13452",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumAggregatedAttestationsResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/block-sizes":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"Returns the average daily blocksize (bytes) for the specified period.",
                "operationId":"17",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SortParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumBlockSizeResponse"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/block-sizes":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"Returns the average daily blocksize (bytes) for the specified period.",
                "operationId":"23",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SortParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismBlockSizeResponse"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/graffitiwall":{
            "get":{
                "tags":[
                    "Graffitiwall"
                ],
                "description": "Returns the most recent pixels that have been painted during the last 10000 slots. Optionally set the slot query parameter to look back further. Boundary coordinates are included. Returns an error if an invalid area is provided by the coordinates.",
                "summary":"Get all pixels that have been painted until now on the graffitiwall",
                "parameters":[
                    {
                        "name":"startX",
                        "in":"query",
                        "description":"Start X offset",
                        "required":false,
                        "schema":{
                            "type":"integer",
                            "default": 0
                        }
                    },
                    {
                        "name":"startY",
                        "in":"query",
                        "description":"Start Y offset",
                        "required":false,
                        "schema":{
                            "type":"integer",
                            "default": 0
                        }
                    },
                    {
                        "name":"endX",
                        "in":"query",
                        "description":"End X limit",
                        "required":false,
                        "schema":{
                            "type":"integer",
                            "default": 999
                        },
                    },
                    {
                        "name":"endY",
                        "in":"query",
                        "description":"End Y limit",
                        "required":false,
                        "schema":{
                            "type":"integer",
                            "default": 999
                        },
                    },
                    {
                        "name":"slot",
                        "in":"query",
                        "description":"Optional: Slot to query",
                        "required":false,
                        "schema":{
                            "type":"integer"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/GraffitiWallResponse"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/ethstore/latest":{
            "get":{
                "tags":[
                    "Ethereum Validator Rewards",
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest ETH.STORE.",
                "operationId":"81",
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumEthstoreResponse"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/ethstore/{day}":{
            "get":{
                "tags":[
                    "Ethereum Validator Rewards",
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns ETH.STORE for specific beaconchain day.",
                "operationId":"82",
                "parameters":[
                    {
                        "name":"day",
                        "in":"path",
                        "required":true,
                        "description":"Return ETH.STORE for a beaconchain day. Day 1 = Epoch 0 - 225 on Ethereum",
                        "schema":{
                            "type":"integer"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumEthstoreResponse"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/daily-eth-prices":{
            "get":{
                "description":"Returns the historical price of Ether.",
                "tags":[
                    "Ethereum General"
                ],
                "summary":"Daily closing price of one Ether.",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/SortParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumEthDailyPriceResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/rewards":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer",
                    "Ethereum Validator Rewards"
                ],
                "description":"Returns validator rewards for whole days or epochs. If only a time period is specified it returns data for the whole network per default.",
                "operationId":"44",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/WithdrawalCredentialsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/DepositAddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumValidatorRewardResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/balances":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer",
                    "Ethereum Validator Rewards"
                ],
                "description":"Returns validator balances for whole days or epochs. If only a time period is specific it returns data for the whole network per default.",
                "operationId":"45",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/WithdrawalCredentialsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/DepositAddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumValidatorBalanceResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/duties":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer",
                    "Ethereum Validator Rewards"
                ],
                "description":"Returns validator duties for whole days or epochs. If only a time period is specific it returns data for the whole network per default.",
                "operationId":"46",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/WithdrawalCredentialsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/DepositAddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumValidatorDutiesResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/client/metrics":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"Used in eth2 clients to submit stats to your beaconcha.in account. This data can be accessed by the app or the user stats api call.",
                "parameters":[
                    {
                        "name":"apikey",
                        "in":"query",
                        "description":"User API key, can be found on https://beaconcha.in/user/settings",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "name":"machine",
                        "in":"query",
                        "description":"Name your device if you have multiple devices you want to monitor",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/mobile/notify/register":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"Register or update your mobile notification token",
                "requestBody":{
                    "description":"Your device`s firebase notification token",
                    "content":{
                        "*/*":{
                            "schema":{
                                "type":"string"
                            }
                        }
                    },
                    "required":true
                },
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/dashboard/save":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"subscribes a user to get notifications from a specific validator via index",
                "requestBody":{
                    "description":"Index of validator you want to subscribe to",
                    "content":{
                        "*/*":{
                            "schema":{
                                "type":"array",
                                "items":{
                                    "type":"string"
                                }
                            }
                        }
                    },
                    "required":true
                },
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/mobile/settings":{
            "get":{
                "tags":[
                    "User"
                ],
                "summary":"Get your device settings, currently only whether to enable mobile notifcations or not",
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "type":"object",
                                    "properties":{
                                        "data":{
                                            "$ref":"#/components/schemas/MobileSettingsDataResponse"
                                        },
                                        "types.ApiResponse":{
                                            "$ref":"#/components/schemas/StatusResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"Changing your devices mobile settings",
                "requestBody":{
                    "description":"Whether to enable mobile notifications for this device or not",
                    "content":{
                        "*/*":{
                            "schema":{
                                "type":"boolean"
                            }
                        }
                    },
                    "required":true
                },
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "type":"object",
                                    "properties":{
                                        "data":{
                                            "$ref":"#/components/schemas/MobileSettingsDataResponse"
                                        },
                                        "types.ApiResponse":{
                                            "$ref":"#/components/schemas/StatusResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/notifications":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"Get a set of events a user is subscribed to",
                "requestBody":{
                    "description":"An object that filters through the active subscriptions",
                    "content":{
                        "*/*":{
                            "schema":{
                                "type":"object",
                                "properties":{
                                    "event_filters":{
                                        "type":"array",
                                        "items":{
                                            "type":"string"
                                        }
                                    },
                                    "event_names":{
                                        "type":"array",
                                        "items":{
                                            "type":"string"
                                        }
                                    },
                                    "join_validator":{
                                        "type":"boolean"
                                    },
                                    "limit":{
                                        "type":"integer"
                                    },
                                    "offset":{
                                        "type":"integer"
                                    },
                                    "search":{
                                        "type":"string"
                                    }
                                }
                            }
                        }
                    },
                    "required":false
                },
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "type":"object",
                                    "properties":{
                                        "data":{
                                            "type":"array",
                                            "items":{
                                                "$ref":"#/components/schemas/SubscriptionResponse"
                                            }
                                        },
                                        "types.ApiResponse":{
                                            "$ref":"#/components/schemas/StatusResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/stats/{offset}/{limit}":{
            "get":{
                "tags":[
                    "User"
                ],
                "summary":"Get your client submitted stats",
                "parameters":[
                    {
                        "name":"offset",
                        "in":"path",
                        "description":"Data offset, default 0",
                        "required":true,
                        "schema":{
                            "type":"integer",
                            "default":0
                        }
                    },
                    {
                        "name":"limit",
                        "in":"path",
                        "description":"Data limit, default 180 (~3h).",
                        "required":true,
                        "schema":{
                            "type":"integer",
                            "default":180
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "type":"object",
                                    "properties":{
                                        "data":{
                                            "type":"array",
                                            "items":{
                                                "$ref":"#/components/schemas/StatsDataResponse"
                                            }
                                        },
                                        "types.ApiResponse":{
                                            "$ref":"#/components/schemas/StatusResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/token":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"Exchange your oauth code for an access token or refresh your access token",
                "requestBody":{
                    "content":{
                        "multipart/form-data":{
                            "schema":{
                                "required":[
                                    "grant_type"
                                ],
                                "properties":{
                                    "grant_type":{
                                        "type":"string",
                                        "description":"grant_type use authorization_code for oauth code or refresh_token if you wish to refresh an token"
                                    },
                                    "code":{
                                        "type":"string",
                                        "description":"Only required when using authorization_code grant type. Code received via oauth redirect_uri"
                                    },
                                    "redirect_uri":{
                                        "type":"string",
                                        "description":"Only required when using authorization_code grant type. Must match the redirect_uri from your oauth flow."
                                    },
                                    "refresh_token":{
                                        "type":"string",
                                        "description":"Only required when using refresh_token grant type. The refresh_token you received during authorization_code flow."
                                    }
                                }
                            }
                        }
                    },
                    "required":true
                },
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/OAuthResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/OAuthErrorResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/OAuthErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/validator/saved":{
            "get":{
                "tags":[
                    "User"
                ],
                "summary":"Get all your tagged validators",
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "type":"object",
                                    "properties":{
                                        "data":{
                                            "type":"array",
                                            "items":{
                                                "type":"object",
                                                "properties":{
                                                    "index":{
                                                        "type":"integer"
                                                    },
                                                    "pubKey":{
                                                        "type":"string"
                                                    }
                                                }
                                            }
                                        },
                                        "types.ApiResponse":{
                                            "$ref":"#/components/schemas/StatusResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/validator/{pubkey}/add":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"subscribes a user to get notifications from a specific validator",
                "parameters":[
                    {
                        "name":"pubkey",
                        "in":"path",
                        "description":"Public Key of validator you want to subscribe to",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "requestBody":{
                    "description":"Submit \\",
                    "content":{
                        "*/*":{
                            "schema":{
                                "type":"string"
                            }
                        }
                    },
                    "required":false
                },
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/validator/{pubkey}/remove":{
            "post":{
                "tags":[
                    "User"
                ],
                "summary":"unsubscribes a user from a specific validator",
                "parameters":[
                    {
                        "name":"pubkey",
                        "in":"path",
                        "description":"Public Key of validator you want to subscribe to",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "500":{
                        "description":"Internal Server Error",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/slashings":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest X slashings by default.",
                "operationId":"5",
                "parameters":[
                    {
                        "name":"attester",
                        "in":"query",
                        "description":"Include slashings caused by attestation violation",
                        "schema":{
                            "type":"boolean",
                            "default":true
                        }
                    },
                    {
                        "name":"proposer",
                        "in":"query",
                        "description":"Include slashings caused by proposer violation",
                        "schema":{
                            "type":"boolean",
                            "default":true
                        }
                    },
                    {
                        "name":"slashedByValidatorIndices",
                        "in":"query",
                        "description":"Return only results related with these validator indices. (comma separated)",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "name":"slashedValidatorIndices",
                        "in":"query",
                        "description":"Return only results related with these validator indices. (comma separated)",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumSlashingResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/deposits":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest X deposits by default.",
                "operationId":"6",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ProcessedParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TransactionHashesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/WithdrawalCredentialsParameter"
                    },
                    {
                        "$ref":"#/components/parameters/DepositAddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumDepositResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/withdrawals":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest X withdrawals by default.",
                "operationId":"7",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/SlotNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumWithdrawalResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/voluntary-exits":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest X voluntary exits by default.",
                "operationId":"8",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/SlotNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EpochNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumVoluntaryExitResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/bls-changes":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the latest X BLS-to-execution changes by default.",
                "operationId":"800",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/SlotNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EpochNumbersParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/BLSChangeResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/performances":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer",
                    "Ethereum Execution Layer",
                    "Ethereum Validator Rewards"
                ],
                "description":"Returns performance summary reports.",
                "operationId":"801",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/GraffitiParameter"
                    },
                    {
                        "$ref":"#/components/parameters/PoolLabelParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/PerformanceResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/queues":{
            "get":{
                "tags":[
                    "Ethereum Consensus Layer"
                ],
                "description":"Returns the current number of validators entering and exiting the beacon chain.",
                "operationId":"8401",
                "parameters":[
                    
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "$ref":"#/components/schemas/QueueResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/multisig/safe/addresses/transactions":{
            "get":{
                "tags":[
                    "Multi Sig (SAFE)"
                ],
                "description":"See https://safe-transaction-mainnet.safe.global/ and https://safe-transaction-mainnet.safe.global/api/v1/multisig-transactions/0x5562cc0823c37290b75cf8e5a57e5f7e27342d0c0d20045a06329308a746c825/",
                "operationId":"9",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/MultisigTransactionResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/multisig/safe/{transactionHash}/confirmations":{
            "get":{
                "tags":[
                    "Multi Sig (SAFE)"
                ],
                "description":"See https://safe-transaction-mainnet.safe.global/api/v1/multisig-transactions/0x5562cc0823c37290b75cf8e5a57e5f7e27342d0c0d20045a06329308a746c825/confirmations/",
                "operationId":"10",
                "parameters":[
                    {
                        "name":"transactionHash",
                        "in":"path",
                        "description":"TODO",
                        "schema":{
                            "type":"string"
                        },
                        "required":true
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/MultisigConfirmationResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/multisig/safe/{address}/info":{
            "get":{
                "tags":[
                    "Multi Sig (SAFE)"
                ],
                "description":"See https://safe-transaction-mainnet.safe.global/api/v1/safes/0xc7599b60f05639f93D26e58d56D90C526A6e7575/",
                "operationId":"11",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "description":"TODO",
                        "schema":{
                            "type":"string"
                        },
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/MultisigInfoResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/broadcasts":{
            "post":{
                "tags":[
                    "Ethereum General"
                ],
                "description":"Broadcast various signatures or transactions",
                "operationId":"145",
                "requestBody":{
                  "description": "Raw signed signature",
                  "required": true,
                  "content":{
                    "application/json":{
                      "schema": {
                        "$ref":"#/components/schemas/SignatureRequestBody"
                      } 
                    }
                  }
                },
                "responses":{
                    "201":{
                        "description":"Created",
                        "content":{
                            "application/json":{
                                "schema":{ #TODO add created entity to response
                                    "allOf":[
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/{address}":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Returns basic infofrmation about the contract",
                "operationId":"118",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "required":true,
                        "description":"The contract address ",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SourceCodeResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Returns smart contracts based on the search criteria",
                "operationId":"119",
                "parameters":[
                    {
                        "name":"contract creator",
                        "in":"query",
                        "description":"The address of the contract creator",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "name":"transaction hash",
                        "in":"query",
                        "description":"The transaction hash of the contract creation",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/{address}/source-code":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Get Contract ABI for Verified Contract Source Code - https://docs.etherscan.io/api-endpoints/contracts#verify-source-code",
                "operationId":"113",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "required": true,
                        "description":"The contract address to get the ABI, but only for verified source codes.",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SourceCodeResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/{address}/abi":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Get Contract ABI for Verified Contract Source Code - https://docs.etherscan.io/api-endpoints/contracts#verify-source-code",
                "operationId":"111",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "required":true,
                        "description":"The contract address to get the ABI, but only for verified source codes.",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/ABIResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/verifications":{
            "post":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"submit for verification https://docs.etherscan.io/api-endpoints/contracts#verify-source-code",
                "requestBody":{
                  "description": "TODO",
                  "required": true,
                  "content":{
                    "application/json":{
                      #TODO add request body
                    }
                  }
                },
                "responses":{
                    "201":{
                        "description":"Created",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractVerifyResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/verifications/{id}":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Check verification status https://docs.etherscan.io/api-endpoints/contracts#verify-source-code",
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "required":true,
                        "description":"The status ID returned from the submission request.",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractVerifyStatusResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/solidity-imports":{
            "post":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"This endpoint either solidity source files or the solidity source code itsel, parses it for function & event signatures and imports them. https://www.4byte.directory/docs/",
                "operationId":"92",
                #"parameters":[
                #    {
                #        "name":"Import via Source Code",
                #        "in":"query",
                #        "description":"Import the source code of the smart contract.",
                #        "schema":{
                #            "type":"string"
                #        }
                #    },
                #    {
                #        "name":"Import via File Import",
                #        "in":"query",
                #        "description":"Import the source files of the smart contract.",
                #        "schema":{
                #            "type":"string"
                #        }
                #    },
                #    {
                #        "name":"Import via Contract ABI",
                #        "in":"query",
                #        "description":"Import the source files of the smart contract.",
                #        "schema":{
                #            "type":"string"
                #        }
                #    }
                #],
                #TODO, is this correct?? validate
                "requestBody":{
                  "description": "Import the source code of the smart contract.",
                  "required": true,
                  "content":{
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "source-file": {
                            "type": "string",
                            "format": "binary"
                          }
                        }
                      }
                    },
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "source_code": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses":{
                    "201":{
                        "description":"Created",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractImportResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/event-signatures":{
            "post":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Hhuman readable function signature and the 4-byte function selector used by the EVM. Leave queries empty for a paginates list of signatures. https://www.4byte.directory/docs/",
                "operationId":"293",
                "requestBody":{
                  "description": "Event signature", #TODO better description
                  "required": true,
                  "content":{
                    "application/json":{
                      "schema": {
                        "$ref":"#/components/schemas/SignatureRequestBody"
                      } 
                    }
                  }
                },
                "responses":{
                    "201":{
                        "description":"Created",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractSignatureResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Returns a paginated list of event signatures. https://www.4byte.directory/docs/",
                "operationId":"297",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractSignatureResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/event-signatures/{id}":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"retrieve an individual event signature. https://www.4byte.directory/docs/",
                "operationId":"298",
                "parameters":[
                  {
                      "name":"id",
                      "in":"path",
                      "required": true,
                      "description":"The primary key of the signature.",
                      "schema":{
                          "type":"integer",
                          "default":""
                      }
                  }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractSignatureResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/signatures":{
            "post":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Hhuman readable function signature and the 4-byte function selector used by the EVM. Leave queries empty for a paginates list of signatures. https://www.4byte.directory/docs/",
                "operationId":"93",
                "requestBody":{
                  "description": "Signature", #TODO better description
                  "required": true,
                  "content":{
                    "application/json":{
                      "schema": {
                        "$ref":"#/components/schemas/SignatureRequestBody"
                      } 
                    }
                  }
                },
                "responses":{
                    "201":{
                        "description":"Created",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractSignatureResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Returns a paginated list of signatures. https://www.4byte.directory/docs/",
                "operationId":"193",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractSignatureResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/smart-contracts/signatures/{id}":{
            "get":{
                "tags":[
                    "Smart Contracts"
                ],
                "description":"Hhuman readable function signature and the 4-byte function selector used by the EVM. Leave queries empty for a paginates list of signatures. https://www.4byte.directory/docs/",
                "operationId":"194",
                "parameters":[
                  {
                      "name":"id",
                      "in":"path",
                      "required": true,
                      "description":"The primary key of the signature.",
                      "schema":{
                          "type":"integer",
                          "default":""
                      }
                  }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/SmartContractSignatureResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/rocket-pool/nodes":{
            "get":{
                "tags":[
                    "Rocket Pool"
                ],
                "description":"Returns a list of Rocket Pool nodes. See: https://rocketscan.io/api/mainnet/nodes/list",
                "operationId":"14",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumRocketpoolNodeResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/rocket-pool/minipools":{
            "get":{
                "tags":[
                    "Rocket Pool"
                ],
                "description":"Returns a list of Rocket Pool nodes. See: https://rocketscan.io/api/mainnet/nodes/list",
                "operationId":"33",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/ValidatorIndicesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/ValidatorPublicKeysParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumRocketpoolMinipoolResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/addresses/{address}/ens":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"Returns ENS related information about an Ethereum address.",
                "operationId":"36",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "required":true,
                        "description":"Provide an Ethereum address to retrieve information related to ENS.",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/ensResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/ens/{ensName}":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"Returns ENS related information about an ENS name.",
                "operationId":"37",
                "parameters":[
                    {
                        "name":"ensName",
                        "in":"path",
                        "required":true,
                        "description":"Provide an ENS name to retrieve information related to its Ethereum address.",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/ensResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/addresses/{address}/event-logs":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"Returns the event logs from an address. Filterable by block range. See https://docs.etherscan.io/api-endpoints/logs#get-event-logs-by-address",
                "operationId":"99",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "required": true,
                        "description":"Address for which to return event logs or ENS name ('name.eth')",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumEventLogResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/addresses/{address}/event-logs":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"See https://docs.etherscan.io/api-endpoints/logs#get-event-logs-by-address",
                "operationId":"13",
                "parameters":[
                    {
                        "name":"address",
                        "in":"path",
                        "required": true,
                        "description":"Address for which to return event logs",
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismEventLogResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/gasnow":{
            "get":{
                "description":"Predicts the gas price based on pending transactions in the mempool",
                "tags":[
                    "Ethereum Gas"
                ],
                "parameters":[
                    
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumGasNowResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/daily-average-gas-limits":{
            "get":{
                "description":"Get the daily average gas limit.",
                "tags":[
                    "Ethereum Gas"
                ],
                "parameters":[
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumDailyAvgGasLimitResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/daily-gas-used":{
            "get":{
                "description":"Get the daily used gas.",
                "tags":[
                    "Ethereum Gas"
                ],
                "parameters":[
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumDailyGasUsedResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/addresses/transactions":{
            "description":"Returns the latest X transactions by default",
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"",
                "operationId":"16",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TokenParameter"
                    },
                    {
                        "$ref":"#/components/parameters/MethodParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TransactionDirectionParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TransactionTypeParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumTransactionResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/addresses/transactions":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"",
                "operationId":"35",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TokenParameter"
                    },
                    {
                        "$ref":"#/components/parameters/MethodParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TransactionDirectionParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TransactionTypeParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismTransactionResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/transactions":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"",
                "operationId":"30",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/TransactionHashesParameterRequired"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumTransactionResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/addresses/transactions/layer2-to-layer1":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"Transaction from Optimism to Ethereum. Note:'startBlock' refers to an Optimism block. ",
                "operationId":"105",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismTransactionResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/addresses/transactions/layer1-to-layer2":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"Transaction from Ethereum to Optimism. Note:'startBlock' refers to an Optimism block. ",
                "operationId":"32",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismBridgeResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/transactions":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"",
                "operationId":"101",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/TransactionHashesParameterRequired"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismTransactionResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/token-supply-history":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"",
                "operationId":"75",
                "parameters":[
                    {
                        "name":"contractAddresses",
                        "in":"query",
                        "description":"The addresses of token contracts. Add multiple addresses (comma seperated)",
                        "schema":{
                            "type":"string"
                        },
                        "required":true
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "name":"tokenType",
                        "in":"query",
                        "description":"Specify the token type (ERC20, ERC721, ERC1155)",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumTokenSupplyHistoryResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/token-supply-history":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"",
                "operationId":"34",
                "parameters":[
                    {
                        "name":"contractAddresses",
                        "in":"query",
                        "description":"The address of a token contract. Add multiple addresses (comma-seperated)",
                        "schema":{
                            "type":"string"
                        },
                        "required":true
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "name":"tokenType",
                        "in":"query",
                        "description":"Specify the token type (ERC20, ERC721, ERC1155)",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismTokenSupplyHistoryResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/addresses/balances":{
            "get":{
                "tags":[
                    "Ethereum Execution Layer"
                ],
                "description":"",
                "operationId":"31",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TokenAddressParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumAccountBalanceResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/ethereum/validators/leaderboard":{
            "get":{
                "tags":[
                    "Ethereum General"
                ],
                "description":"TODO: Include execution layer. Get the current top 100 performing validators",
                "operationId":"123",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/TimeframeParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/EthereumLeaderboardResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/optimism/addresses/balances":{
            "get":{
                "tags":[
                    "Optimism (Layer 2)"
                ],
                "description":"",
                "operationId":"39",
                "parameters":[
                    {
                        "$ref":"#/components/parameters/AddressesParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndDateParameter"
                    },
                    {
                        "$ref":"#/components/parameters/StartBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/EndBlockParameter"
                    },
                    {
                        "$ref":"#/components/parameters/TokenAddressParameter"
                    },
                    {
                        "$ref":"#/components/parameters/CursorParameter"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "type":"object",
                                            "properties":{
                                                "data":{
                                                    "type":"array",
                                                    "items":{
                                                        "$ref":"#/components/schemas/OptimismAccountBalanceResponse"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sync_committee/{period}":{
            "get":{
                "tags":[
                    "Sync Committee"
                ],
                "description":"Returns the sync-committee for a sync-period. Validators are sorted by sync-committee-index. Sync committees where introduced in the Altair hardfork. Peroids before the hardfork do not contain sync-committees. For mainnet sync-committes first started after epoch 74240 (period 290) and each sync-committee is active for 256 epochs.",
                "operationId":"200",
                "parameters":[
                    {
                        "name":"period",
                        "in":"path",
                        "required":true,
                        "description":"Period, or 'latest' for latest period or 'next' for next period in the future.",
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "allOf":[
                                        {
                                            "$ref":"#/components/schemas/SyncCommitteeResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/StatusResponse"
                                        },
                                        {
                                            "$ref":"#/components/schemas/MetaResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404":{
                        "description":"Not Found",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components":{
        "parameters":{
            "CursorParameter":{
                "name":"cursor",
                "in":"query",
                "description":"Used for pagination, set this to the `next_cursor` field of the previous response.",
                "schema":{
                    "type":"string"
                }
            },
            "BlockNumbersParameter":{
                "name":"blockNumbers",
                "in":"query",
                "description":"Return only results related with these block numbers. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "BlockHashesParameter":{
                "name":"blockHashes",
                "in":"query",
                "description":"Return only results related with these block hashes. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "SlotNumbersParameter":{
                "name":"slotNumbers",
                "in":"query",
                "description":"Return only results related with these slot numbers. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "SlotHashesParameter":{
                "name":"slotHashes",
                "in":"query",
                "description":"Return only results related with these slot hashes. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "ValidatorPublicKeysParameter":{
                "name":"validatorPublicKeys",
                "in":"query",
                "description":"Return only results related with these validator public keys. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "ValidatorIndicesParameter":{
                "name":"validatorIndices",
                "in":"query",
                "description":"Return only results related with these validator indices. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "PriorityFeeRecipientsParameter":{
                "name":"priorityFeeRecipients",
                "in":"query",
                "description":"Return only results with these priority fee recpients. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "ProposerRewardRecipientsParameter":{
                "name":"proposerRewardRecipients",
                "in":"query",
                "description":"Return only results with these proposer reward recipients. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "BlockStatusesParameter":{
                "name":"blockStatuses",
                "in":"query",
                "description":"Can be `canonical`, `ommer` (uncle) and/or `orphan`. (comma separated)",
                "schema":{
                    "type":"string",
                    "default":"canonical"
                }
            },
            "FinalityParameter":{
                "name":"finality",
                "in":"query",
                "description":"Return only results with at least this finality status.",
                "schema":{
                    "type":"string",
                    "enum":[
                        "justified",
                        "finalized"
                    ]
                }
            },
            "GraffitiParameter":{
                "name":"graffiti",
                "in":"query",
                "description":"Return only results in relation with a specific graffiti.",
                "schema":{
                    "type":"string"
                }
            },
            "ValidatorStatusesParameter":{
                "name":"validatorStatuses",
                "in":"query",
                "description":"Return only results with these statuses (comma separated) \n\n TODO: Show list of all statuses we have.",
                "schema":{
                    "type":"string"
                }
            },
            "PoolLabelParameter":{
                "name":"poolLabel",
                "in":"query",
                "description":"Return only results in relation with a specific staking service. \n\n Available services: https://beaconcha.in/pools",
                "schema":{
                    "type":"string"
                }
            },
            "EpochNumbersParameter":{
                "name":"epochNumbers",
                "in":"query",
                "description":"Return only results from these epoch numbers. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "DepositAddressesParameter":{
                "name":"depositAddresses",
                "in":"query",
                "description":"Return only results related with these deposit addresses. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "WithdrawalCredentialsParameter":{
                "name":"withdrawalCredentials",
                "in":"query",
                "description":"Return only results related with these withdrawal credentials. (comma sperated)",
                "schema":{
                    "type":"string"
                }
            },
            "WithdrawalAddressesParameter":{
                "name":"withdrawalAddresses",
                "in":"query",
                "description":"Return only results related with these withdrawal addresses. (comma separated)",
                "schema":{
                    "type":"string"
                }
            },
            "AddressesParameter":{
                "name":"addresses",
                "in":"query",
                "description":"'0x..'. Add mulitple addresses (comma seperated) or ENS name ('name.eth')",
                "schema":{
                    "type":"string"
                },
                "required":true
            },
            "TokenParameter":{
                "name":"token",
                "in":"query",
                "description":"Only return transactions related with this token contract address",
                "schema":{
                    "type":"string"
                }
            },
            "MethodParameter":{
                "name":"method",
                "in":"query",
                "description":"Only return transactions with this method name or method hash.",
                "schema":{
                    "type":"string"
                }
            },
            "SortParameter":{
                "name":"sort",
                "in":"query",
                "description":"The sorting preference of the output. 'asc' for ascending and 'desc' for descending.",
                "schema":{
                    "type":"string",
                    "enum":[
                        "asc",
                        "desc"
                    ],
                    "default":"asc"
                }
            },
            "TransactionHashesParameter":{
                "name":"transactionHashes",
                "in":"query",
                "description":"Return only results related with these transaction hashes. (comma sperated)",
                "schema":{
                    "type":"string"
                }
            },
            "TransactionHashesParameterRequired":{
                "name":"transactionHashes",
                "in":"query",
                "required":true,
                "description":"Returns information about transactions by its hash. (comma sperated)",
                "schema":{
                    "type":"string"
                }
            },
            "StartDateParameter":{
                "name":"startDate",
                "in":"query",
                "description":"The start date of the time period in 'yyyy-MM-dd' format.",
                "schema":{
                    "type":"string"
                }
            },
            "EndDateParameter":{
                "name":"endDate",
                "in":"query",
                "description":"The end date of the time period in 'yyyy-MM-dd' format.",
                "schema":{
                    "type":"string"
                }
            },
            "StartBlockParameter":{
                "name":"startBlock",
                "in":"query",
                "description":"The first block included in the time period.",
                "schema":{
                    "type":"string",
                    "default":"latest"
                }
            },
            "EndBlockParameter":{
                "name":"endBlock",
                "in":"query",
                "description":"The last block included in the time period.",
                "schema":{
                    "type":"string"
                }
            },
            "DatesParameter":{
                "name":"dates",
                "in":"query",
                "description":"Return only results from these dates. (comma separated)",
                "schema":{
                    "type":"string",
                    "example":"YYYY-MM-DD"
                }
            },
            "TokenAddressParameter":{
                "name":"tokenAddress",
                "in":"query",
                "description":"Token contract address. Use 'ETH' or 'GNO' for the native currency. Use 'all' for all coins.",
                "schema":{
                    "type":"string"
                }
            },
            "TransactionDirectionParameter":{
                "name":"transactionDirection",
                "in":"query",
                "description":"Only return ingoing, outgoing transactions.",
                "schema":{
                    "type":"string",
                    "example":"'in', 'out'"
                }
            },
            "TransactionTypeParameter":{
                "name":"transactionType",
                "in":"query",
                "description":"Only return transactions with these transaction types",
                "schema":{
                    "type":"string"
                },
                "example":"erc20,erc721,erc1155,internal,produced_block,withdrawal"
            },
            "TimeframeParameter":{
                "name":"timeframe",
                "in":"query",
                "description":"",
                "schema":{
                    "type":"string",
                    "enum":[
                        "1d",
                        "7d",
                        "31d",
                        "365d"
                    ],
                    "default":"7d"
                }
            },
            "ValidParameter":{
                "name":"valid",
                "in":"query",
                "description":"Only return valid OR invalid deposits. Returns both if unset.",
                "schema":{
                    "type":"boolean"
                }
            },
            "ProcessedParameter":{
                "name":"processed",
                "in":"query",
                "description":"Only return pending OR processed (inlcuded by the beacon chain) deposits. Returns both if unset.",
                "schema":{
                    "type":"boolean"
                }
            }
        },
        "schemas":{
            "EthereumEpochResponse":{
                "type":"object",
                "properties":{
                    "epoch":{
                        "type":"integer"
                    },
                    "start_slot":{
                        "type":"integer"
                    },
                    "start_slot_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "total_validator_count":{
                        "type":"integer"
                    },
                    "total_validator_balances":{
                        "type":"integer"
                    },
                    "average_validator_balance":{
                        "type":"integer"
                    },
                    "total_validator_effective_balances":{
                        "type":"integer"
                    },
                    "voted_ether":{
                        "type":"integer"
                    },
                    "voting_participation_rate":{
                        "type":"integer"
                    },
                    "validator_activated_count":{
                        "type":"integer"
                    },
                    "validator_voluntary_exits_count":{
                        "type":"integer"
                    },
                    "validator_offline_count":{
                        "type":"integer"
                    },
                    "processed_deposits_count":{
                        "type":"integer"
                    },
                    "processed_deposits_amount":{
                        "type":"integer"
                    },
                    "processed_withdrawals_count":{
                        "type":"integer"
                    },
                    "processed_withdrawals_amount":{
                        "type":"integer"
                    },
                    "proposer_slashings_count":{
                        "type":"integer"
                    },
                    "attester_slashings_count":{
                        "type":"integer"
                    },
                    "attestations_count":{
                        "type":"integer"
                    },
                    "sync_committee_participation_rate":{
                        "type":"integer"
                    }
                }
            },
            "OptimismBatchResponse":{
                "type":"object",
                "properties":{
                    "batch_index":{
                        "type":"integer"
                    },
                    "batch_size":{
                        "type":"integer"
                    },
                    "batch_type":{
                        "type":"string"
                    },
                    "batch_root":{
                        "type":"string"
                    },
                    "previous_total_elements":{
                        "type":"integer"
                    },
                    "extra_data":{
                        "type":"integer"
                    },
                    "state_batches":{
                        "type":"array",
                        "items":{
                            "type":"object",
                            "properties":{
                                "id":{
                                    "type":"integer"
                                },
                                "transaction_batches":{
                                    "type":"array",
                                    "items":{
                                        "type":"object",
                                        "properties":{
                                            "id":{
                                                "type":"integer"
                                            },
                                            "blocks":{
                                                "type":"array",
                                                "items":{
                                                    "type":"object",
                                                    "properties":{
                                                        "id":{
                                                            "type":"integer"
                                                        },
                                                        "transactions":{
                                                            "type":"array",
                                                            "items":{
                                                                "type":"object",
                                                                "properties":{
                                                                    "id":{
                                                                        "type":"integer"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "batch":{
                        "type":"object",
                        "properties":{
                            "state_batch":{
                                "type":"object",
                                "properties":{
                                    "state_batch_index":{
                                        "type":"integer"
                                    },
                                    "block_confirmations_on_ethereum":{
                                        "type":"integer"
                                    },
                                    "state_root_submission_transaction_hash":{
                                        "type":"string",
                                        "format":"hex"
                                    },
                                    "transaction_batch":{
                                        "type":"array",
                                        "items":{
                                            "type":"object",
                                            "properties":{
                                                "transaction_batch_index":{
                                                    "type":"integer"
                                                },
                                                "eth_transaction_batch_submission_transaction_hash":{
                                                    "type":"string",
                                                    "format":"hex"
                                                },
                                                "state_batch_index":{
                                                    "type":"integer"
                                                },
                                                "eth_state_batch_submission_transaction_hash":{
                                                    "type":"string",
                                                    "format":"hex"
                                                },
                                                "block_confirmations_on_ethereum":{
                                                    "type":"integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ensResponse":{
                "type":"object",
                "properties":{
                    "registration_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "expiration_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "manager":{
                        "type":"string"
                    },
                    "owner":{
                        "type":"string"
                    },
                    "token_id":{
                        "type":"number"
                    },
                    "avatar":{
                        "type":"string"
                    },
                    "content_hash":{
                        "type":"string"
                    },
                    "sub_domains":{
                        "type":"array",
                        "items":{
                            "type":"string"
                        }
                    },
                    "history":{
                        "type":"object",
                        "properties":{
                            "from":{
                                "type":"string"
                            },
                            "transaction_hash":{
                                "type":"string"
                            },
                            "date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "action":{
                                "type":"string"
                            }
                        }
                    }
                }
            },
            "SmartContractResponse":{
                "type":"object",
                "properties":{
                    "relay_name":{
                        "type":"string"
                    },
                    "builder_public_key":{
                        "type":"string"
                    },
                    "proposer_reward":{
                        "type":"string"
                    },
                    "proposer_reward_recipient":{
                        "type":"string"
                    }
                }
            },
            "SourceCodeResponse":{
                "type":"object",
                "properties":{
                    "source_code":{
                        "type":"string"
                    },
                    "abi":{
                        "type":"string"
                    },
                    "contract_name":{
                        "type":"string"
                    },
                    "compiler_version":{
                        "type":"string"
                    },
                    "optimization_used":{
                        "type":"integer"
                    },
                    "runs":{
                        "type":"integer"
                    },
                    "constructor_arguments":{
                        "type":"string"
                    },
                    "evm_version":{
                        "type":"string"
                    },
                    "library":{
                        "type":"string"
                    },
                    "license_type":{
                        "type":"string"
                    },
                    "proxy":{
                        "type":"integer"
                    },
                    "implementation":{
                        "type":"integer"
                    },
                    "swarm_source":{
                        "type":"integer"
                    }
                }
            },
            "ABIResponse":{
                "type":"string",
                "example":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}]"
            },
            "SmartContractSignatureResponse":{
                "type":"object",
                "properties":{
                    "id":{
                        "type":"integer"
                    },
                    "createdTime":{
                        "type":"string"
                    },
                    "text_signature":{
                        "type":"string"
                    },
                    "bytes_signature":{
                        "type":"string"
                    },
                    "hex_signature":{
                        "type":"string",
                        "format":"hex"
                    }
                }
            },
            "SmartContractImportResponse":{
                "type":"object",
                "properties":{
                    "processed":{
                        "type":"integer"
                    },
                    "imported":{
                        "type":"integer"
                    },
                    "duplicates":{
                        "type":"integer"
                    },
                    "ignored":{
                        "type":"integer"
                    }
                }
            },
            "GraffitiWallResponse":{
                "type":"object",
                "properties":{
                    "color":{
                        "type":"integer"
                    },
                    "slot":{
                        "type":"integer"
                    },
                    "validator":{
                        "type":"integer"
                    },
                    "x":{
                        "type":"integer"
                    },
                    "y":{
                        "type":"integer"
                    }
                }
            },
            "EthereumLeaderboardResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "performance":{
                        "type":"object",
                        "properties":{
                            "1d":{
                                "type":"integer"
                            },
                            "7d":{
                                "type":"integer"
                            },
                            "31d":{
                                "type":"integer"
                            },
                            "365d":{
                                "type":"integer"
                            },
                            "total":{
                                "type":"integer"
                            }
                        }
                    },
                    "rank":{
                        "type":"object",
                        "properties":{
                            "1d":{
                                "type":"integer"
                            },
                            "7d":{
                                "type":"integer"
                            },
                            "31d":{
                                "type":"integer"
                            },
                            "365d":{
                                "type":"integer"
                            },
                            "total":{
                                "type":"integer"
                            }
                        }
                    }
                }
            },
            "EthereumBlockResponse":{
                "type":"object",
                "properties":{
                    "consensus_algorithm":{
                        "type":"string"
                    },
                    "status":{
                        "type":"string"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "consensus_layer":{
                        "type":"object",
                        "properties":{
                            "slot":{
                                "type":"integer"
                            },
                            "slot_date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "epoch":{
                                "type":"integer"
                            },
                            "block_root":{
                                "type":"string"
                            },
                            "proposer":{
                                "type":"integer"
                            },
                            "attestations_count":{
                                "type":"integer"
                            },
                            "attester_slashings_count":{
                                "type":"integer"
                            },
                            "proposer_slashings_count":{
                                "type":"integer"
                            },
                            "deposits":{
                                "type":"object",
                                "properties":{
                                    "eth1data_block_hash":{
                                        "type":"string"
                                    },
                                    "eth1data_deposit_root":{
                                        "type":"string"
                                    },
                                    "eth1data_deposit_count":{
                                        "type":"integer"
                                    },
                                    "processed_beacon_deposits_count":{
                                        "type":"integer"
                                    },
                                    "processed_beacon_deposits_amount":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "graffiti":{
                                "type":"string"
                            },
                            "graffiti_text":{
                                "type":"string"
                            },
                            "parent_root":{
                                "type":"string"
                            },
                            "randao_reveal":{
                                "type":"string"
                            },
                            "signature":{
                                "type":"string"
                            },
                            "state_root":{
                                "type":"string"
                            },
                            "sync_committee":{
                                "type":"object",
                                "properties":{
                                    "sync_aggregate_bits":{
                                        "type":"string"
                                    },
                                    "sync_aggregate_participation":{
                                        "type":"number"
                                    },
                                    "sync_aggregate_signature":{
                                        "type":"string"
                                    }
                                }
                            },
                            "voluntary_exits_count":{
                                "type":"integer"
                            },
                            "processed_withdrawals_count":{
                                "type":"integer"
                            },
                            "processed_withdrawals_amount":{
                                "type":"integer"
                            },
                            "votes":{
                                "type":"integer"
                            }
                        }
                    },
                    "execution_layer":{
                        "type":"object",
                        "properties":{
                            "block_number":{
                                "type":"integer"
                            },
                            "block_hash":{
                                "type":"string"
                            },
                            "block_date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "miner_reward":{
                                "type":"integer"
                            },
                            "miner_reward_recipient":{
                                "type":"string"
                            },
                            "proposer_reward":{
                                "type":"integer"
                            },
                            "proposer_reward_recipient":{
                                "type":"string"
                            },
                            "priority_fees":{
                                "type":"integer"
                            },
                            "priority_fees_recipient":{
                                "type":"string"
                            },
                            "gas_limit":{
                                "type":"integer"
                            },
                            "gas_used":{
                                "type":"integer"
                            },
                            "base_fee":{
                                "type":"integer"
                            },
                            "base_fee_per_gas":{
                                "type":"integer"
                            },
                            "total_gas_burn":{
                                "type":"integer"
                            },
                            "extra_data":{
                                "type":"string"
                            },
                            "logs_bloom":{
                                "type":"string"
                            },
                            "parent_hash":{
                                "type":"string"
                            },
                            "prev_randao":{
                                "type":"string"
                            },
                            "receipts_root":{
                                "type":"string"
                            },
                            "state_root":{
                                "type":"string"
                            },
                            "transactions_count":{
                                "type":"integer"
                            },
                            "internal_transactions_count":{
                                "type":"integer"
                            },
                            "uncle_count":{
                                "type":"integer"
                            },
                            "uncle_hash":{
                                "type":"string"
                            },
                            "difficulty":{
                                "type":"integer"
                            },
                            "deposits":{
                                "type":"object",
                                "properties":{
                                    "executed_contract_deposits_count":{
                                        "type":"integer"
                                    },
                                    "executed_contract_deposits_amount":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "relays_reported_data":{
                                "type":"array",
                                "items":{
                                    "type":"object",
                                    "properties":{
                                        "relay_name":{
                                            "type":"string"
                                        },
                                        "builder_public_key":{
                                            "type":"string"
                                        },
                                        "proposer_reward":{
                                            "type":"string"
                                        },
                                        "proposer_reward_recipient":{
                                            "type":"string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OptimismBlockResponse":{
                "type":"object",
                "properties":{
                    "block_hash":{
                        "type":"string"
                    },
                    "parent_hash":{
                        "type":"string"
                    },
                    "block_number":{
                        "type":"integer"
                    },
                    "extra_data":{
                        "type":"string"
                    },
                    "fee_recipient":{
                        "type":"string"
                    },
                    "gas_limit":{
                        "type":"integer"
                    },
                    "gas_used":{
                        "type":"integer"
                    },
                    "logs_bloom":{
                        "type":"string"
                    },
                    "random":{
                        "type":"string"
                    },
                    "receipts_root":{
                        "type":"string"
                    },
                    "state_root":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "transactions_count":{
                        "type":"integer"
                    }
                }
            },
            "StatusResponse":{
                "type":"object",
                "properties":{
                    "status":{
                        "type":"string"
                    }
                }
            },
            "MetaResponse":{
                "type":"object",
                "properties":{
                    "metadata":{
                        "type":"object",
                        "properties":{
                            "total_results":{
                                "type":"integer"
                            },
                            "latest_imported_block":{
                                "type":"integer"
                            },
                            "current_date_time":{
                                "type":"string",
                                "format": "date-time"
                            }
                        }
                    }
                }
            },
            "EthereumValidatorResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "validator_public_key":{
                        "type":"string"
                    },
                    "status":{
                        "type":"string"
                    },
                    "balance":{
                        "type":"integer"
                    },
                    "effective_balance":{
                        "type":"integer"
                    },
                    "slashed":{
                        "type":"boolean"
                    },
                    "latest_attestation_slot":{
                        "type":"integer"
                    },
                    "latest_attestation_slot_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "processed_beacon_deposits_count":{
                        "type":"integer"
                    },
                    "processed_beacon_deposits_amount":{
                        "type":"integer"
                    },
                    "slashed_other_validators_count":{
                        "type":"integer"
                    },
                    "fully_withdrawable_epoch":{
                        "type":"integer"
                    },
                    "withdrawal_credentials":{
                        "type":"string"
                    },
                    "rank_number":{
                        "type":"integer"
                    },
                    "rank_percent":{
                        "type":"integer"
                    },
                    "activation":{
                        "type":"object",
                        "properties":{
                            "activation_epoch":{
                                "type":"integer"
                            },
                            "activation_epoch_start_date_time":{
                                "type":"string",
                                "format": "date-time"
                            },
                            "activation_eligibility_epoch":{
                                "type":"integer"
                            },
                            "activation_eligibility_epoch_start_date_time":{
                                "type":"string",
                                "format": "date-time"
                            },
                            "activation_queue_position":{
                                "type":"integer"
                            },
                            "expected_activation_epoch":{
                                "type":"integer"
                            },
                            "expected_activation_epoch_start_date_time":{
                                "type":"string",
                                "format":"date-time"
                            }
                        }
                    },
                    "exit":{
                        "type":"object",
                        "properties":{
                            "exit_epoch":{
                                "type":"integer"
                            },
                            "exit_epoch_start_date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "exit_queue_position":{
                                "type":"integer"
                            }
                        }
                    },
                    "withdrawals":{
                        "type":"object",
                        "properties":{
                            "processed_withdrawals_count":{
                                "type":"integer"
                            },
                            "processed_withdrawals_amount":{
                                "type":"integer"
                            },
                            "scheduled_withdrawal":{
                                "type":"object",
                                "properties":{
                                    "estimated_withdrawal_slot":{
                                        "type":"integer"
                                    },
                                    "estimated_withdrawal_slot_date_time":{
                                        "type":"string",
                                        "format":"date-time"
                                    },
                                    "estimated_withdrawal_amount":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "duties":{
                        "$ref":"#/components/schemas/EthereumValidatorDuties"
                    },
                    "rewards":{
                        "$ref":"#/components/schemas/EthereumValidatorReward"
                    },
                    "luck":{
                        "type":"object",
                        "properties":{
                            "proposals":{
                                "type":"object",
                                "properties":{
                                    "luck":{
                                        "type":"integer"
                                    },
                                    "expecation":{
                                        "type":"integer"
                                    },
                                    "expectation_avg":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "sync_committee":{
                                "type":"object",
                                "properties":{
                                    "luck":{
                                        "type":"integer"
                                    },
                                    "expecation":{
                                        "type":"integer"
                                    },
                                    "expectation_avg":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumDepositResponse":{
                "allOf":[
                    {
                        "$ref":"#/components/schemas/EthereumDeposit"
                    },
                    {
                        "type":"object",
                        "properties":{
                            "labels":{
                                "$ref":"#/components/schemas/ValidatorLabels"
                            }
                        }
                    }
                ]
            },
            "EthereumDeposit":{
                "type":"object",
                "properties":{
                    "block_number":{
                        "type":"integer"
                    },
                    "block_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "public_key":{
                        "type":"string"
                    },
                    "amount":{
                        "type":"integer"
                    },
                    "signature":{
                        "type":"string"
                    },
                    "transaction_hash":{
                        "type":"string"
                    },
                    "transaction_index":{
                        "type":"integer"
                    },
                    "transaction_input":{
                        "type":"string"
                    },
                    "from_address":{
                        "type":"string"
                    },
                    "merkle_tree_index":{
                        "type":"string"
                    },
                    "valid_signature":{
                        "type":"boolean"
                    },
                    "withdrawal_credentials":{
                        "type":"string"
                    },
                    "removed":{
                        "type":"boolean"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    }
                }
            },
            "EthereumWithdrawalResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "slot":{
                        "type":"integer"
                    },
                    "slot_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "address":{
                        "type":"string"
                    },
                    "amount":{
                        "type":"integer"
                    },
                    "block_root":{
                        "type":"string"
                    },
                    "withdrawal_index":{
                        "type":"integer"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumVoluntaryExitResponse":{
                "type":"object",
                "properties":{
                    "block_index":{
                        "type":"integer"
                    },
                    "block_root":{
                        "type":"string"
                    },
                    "block_slot":{
                        "type":"integer"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "signature":{
                        "type":"string"
                    },
                    "validator_index":{
                        "type":"integer"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "MultisigTransactionResponse":{
                "type":"object",
                "properties":{
                    "TODO":{
                        "type":"object"
                    }
                }
            },
            "MultisigConfirmationResponse":{
                "type":"object",
                "properties":{
                    "TODO":{
                        "type":"object"
                    }
                }
            },
            "MultisigInfoResponse":{
                "type":"object",
                "properties":{
                    "TODO":{
                        "type":"object"
                    }
                }
            },
            "EthereumAttestationResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"string"
                    },
                    "attester_slot":{
                        "type":"string"
                    },
                    "attester_slot_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "inclusion_slot":{
                        "type":"string"
                    },
                    "inclusion_slot_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "status":{
                        "type":"integer"
                    },
                    "committee_index":{
                        "type":"integer"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumAggregatedAttestationsResponse":{
                "type":"object",
                "properties":{
                    "aggregation_bits":{
                        "type":"string"
                    },
                    "beacon_block_root":{
                        "type":"string"
                    },
                    "block_index":{
                        "type":"integer"
                    },
                    "block_root":{
                        "type":"string"
                    },
                    "block_slot":{
                        "type":"integer"
                    },
                    "committee_index":{
                        "type":"integer"
                    },
                    "signature":{
                        "type":"string"
                    },
                    "slot":{
                        "type":"integer"
                    },
                    "source_epoch":{
                        "type":"integer"
                    },
                    "source_root":{
                        "type":"string"
                    },
                    "target_epoch":{
                        "type":"integer"
                    },
                    "target_root":{
                        "type":"string"
                    },
                    "validators":{
                        "type":"array",
                        "items":{
                            "type":"integer"
                        }
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    }
                }
            },
            "EthereumSlashingResponse":{
                "type":"object",
                "properties":{
                    "attester_slashing":{
                        "type":"object",
                        "properties":{
                            "attestation1_beacon_block_root":{
                                "type":"string"
                            },
                            "attestation1_index":{
                                "type":"integer"
                            },
                            "attestation1_indices":{
                                "type":"array",
                                "items":{
                                    "type":"integer"
                                }
                            },
                            "attestation1_signature":{
                                "type":"string"
                            },
                            "attestation1_slot":{
                                "type":"integer"
                            },
                            "attestation1_source_epoch":{
                                "type":"integer"
                            },
                            "attestation1_source_root":{
                                "type":"string"
                            },
                            "attestation1_target_epoch":{
                                "type":"integer"
                            },
                            "attestation1_target_root":{
                                "type":"string"
                            },
                            "attestation2_beacon_block_root":{
                                "type":"string"
                            },
                            "attestation2_index":{
                                "type":"integer"
                            },
                            "attestation2_indices":{
                                "type":"array",
                                "items":{
                                    "type":"integer"
                                }
                            },
                            "attestation2_signature":{
                                "type":"string"
                            },
                            "attestation2_slot":{
                                "type":"integer"
                            },
                            "attestation2_source_epoch":{
                                "type":"integer"
                            },
                            "attestation2_source_root":{
                                "type":"string"
                            },
                            "attestation2_target_epoch":{
                                "type":"integer"
                            },
                            "attestation2_target_root":{
                                "type":"string"
                            },
                            "block_index":{
                                "type":"integer"
                            },
                            "block_root":{
                                "type":"string"
                            },
                            "block_slot":{
                                "type":"integer"
                            }
                        }
                    },
                    "proposer_slashing":{
                        "type":"object",
                        "properties":{
                            "block_index":{
                                "type":"integer"
                            },
                            "block_root":{
                                "type":"string"
                            },
                            "block_slot":{
                                "type":"integer"
                            },
                            "header1_bodyroot":{
                                "type":"string"
                            },
                            "header1_parentroot":{
                                "type":"string"
                            },
                            "header1_signature":{
                                "type":"string"
                            },
                            "header1_slot":{
                                "type":"integer"
                            },
                            "header1_stateroot":{
                                "type":"string"
                            },
                            "header2_bodyroot":{
                                "type":"string"
                            },
                            "header2_parentroot":{
                                "type":"string"
                            },
                            "header2_signature":{
                                "type":"string"
                            },
                            "header2_slot":{
                                "type":"integer"
                            },
                            "header2_stateroot":{
                                "type":"string"
                            },
                            "proposer_index":{
                                "type":"integer"
                            }
                        }
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumRocketpoolMinipoolResponse":{
                "type":"object",
                "properties":{
                    "index":{
                        "type":"integer"
                    },
                    "minipool":{
                        "type":"object",
                        "properties":{
                            "minipool_address":{
                                "type":"string"
                            },
                            "minipool_deposit_type":{
                                "type":"string"
                            },
                            "minipool_node_fee":{
                                "type":"integer"
                            },
                            "minipool_status":{
                                "type":"string"
                            },
                            "minipool_status_time":{
                                "type":"integer"
                            }
                        }
                    },
                    "node":{
                        "type":"object",
                        "properties":{
                            "node_address":{
                                "type":"string"
                            },
                            "node_max_rpl_stake":{
                                "type":"integer"
                            },
                            "node_min_rpl_stake":{
                                "type":"integer"
                            },
                            "node_rpl_stake":{
                                "type":"integer"
                            },
                            "node_timezone_location":{
                                "type":"string"
                            },
                            "penalty_count":{
                                "type":"integer"
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "unclaimed_rpl_rewards":{
                                        "type":"integer"
                                    },
                                    "unclaimed_smoothing_pool":{
                                        "type":"integer"
                                    },
                                    "rpl_cumulative_rewards":{
                                        "type":"integer"
                                    },
                                    "claimed_smoothing_pool":{
                                        "type":"integer"
                                    },
                                    "rpl_apr":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "EthereumRocketpoolNodeResponse":{
                "type":"object",
                "properties":{
                    "index":{
                        "type":"integer"
                    },
                    "node":{
                        "type":"object",
                        "properties":{
                            "node_address":{
                                "type":"string"
                            },
                            "time_zone":{
                                "type":"string"
                            },
                            "smoothing_pool":{
                                "type":"boolean"
                            },
                            "withdrawal_credential":{
                                "type":"string"
                            },
                            "pending_withdrawal_credential":{
                                "type":"string"
                            },
                            "minipool_count":{
                                "type":"integer"
                            },
                            "minipool_active_cfixount":{
                                "type":"integer"
                            },
                            #"fee_distributor":{
                            #    "type":"object",
                            #    "properties":{
                            #        "address":{
                            #            "type":"string"
                            #        },
                            #        "initialized":{
                            #            "type":"boolean"
                            #        },
                            #        "balance":{
                            #            "type":"integer"
                            #        }
                            #    }
                            #}
                        }
                    },
                    "rpl":{
                        "type":"object",
                        "properties":{
                            "min_collateral":{
                                "type":"string"
                            },
                            "max_collateral":{
                                "type":"integer"
                            },
                            "effective_collateral":{
                                "type":"integer"
                            },
                            "current_collateral":{
                                "type":"integer"
                            },
                            "collateral_perc":{
                                "type":"integer"
                            },
                            "effective_collateral_perc":{
                                "type":"integer"
                            },
                            "claimed_rpl":{
                              "type":"number"
                            },
                            "unclaimed_rpl":{
                              "type":"number"
                            }
                        }
                    },
                    "eth":{
                        "type":"object",
                        "properties":{
                            "total_deposit":{
                                "type":"integer"
                            },
                            "matched_by_protocol":{
                                "type":"integer"
                            },
                            "collaterization_ratio":{
                                "type":"number"
                            },
                            "max_matchable_eth":{
                                "type":"integer"
                            },
                            "deposit_credit":{
                              "type":"number"
                            },
                            "refund_balance":{
                              "type":"number"
                            },
                            "distributer_balance":{
                              "type":"number"
                            }
                        }
                    },
                    "smoothing_pool":{
                      "type":"object",
                        "properties":{
                            "claimed":{
                              "type":"number"
                            },
                            "unclaimed":{
                              "type":"number"
                            }
                        }
                    },
                    "minipool_public_keys":{
                        "type":"array",
                        "items":{
                            "type":"string"
                        }
                    },
                    "created":{
                        "type":"object",
                        "properties":{
                            "date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "block_number":{
                                "type":"integer"
                            }
                        }
                    }
                }
            },
            "EthereumEventLogResponse":{
                "type":"object",
                "properties":{
                    "address":{
                        "type":"string"
                    },
                    "topics":{
                        "type":"array",
                        "items":{
                            "type":"string"
                        }
                    },
                    "data":{
                        "type":"string"
                    },
                    "block_number":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "gas_price":{
                        "type":"string"
                    },
                    "gas_used":{
                        "type":"string"
                    },
                    "log_index":{
                        "type":"string"
                    },
                    "transaction_hash":{
                        "type":"string"
                    },
                    "transaction_index":{
                        "type":"string"
                    }
                }
            },
            "OptimismEventLogResponse":{
                "type":"object",
                "properties":{
                    "address":{
                        "type":"string"
                    },
                    "topics":{
                        "type":"array",
                        "items":{
                            "type":"string"
                        }
                    },
                    "data":{
                        "type":"string"
                    },
                    "block_number":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "gas_price":{
                        "type":"string"
                    },
                    "gas_used":{
                        "type":"string"
                    },
                    "log_index":{
                        "type":"string"
                    },
                    "transaction_Hash":{
                        "type":"string"
                    },
                    "transaction_index":{
                        "type":"string"
                    }
                }
            },
            "EthereumTransactionResponse":{
                "type":"object",
                "properties":{
                    "block_number":{
                        "type":"string"
                    },
                    "chain_id":{
                        "type":"integer"
                    },
                    "position_in_block":{
                        "type":"string"
                    },
                    "nonce":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "type":{
                        "type":"string",
                        "enum":[
                            "Standard",
                            "Withdrawal",
                            "Produced Block",
                            "ERC-20",
                            "ERC-721",
                            "ERC-1155",
                            "internal-tx"
                        ]
                    },
                    "from":{
                        "type":"string"
                    },
                    "block_confirmations":{
                        "type":"integer"
                    },
                    "to":{
                        "type":"string"
                    },
                    "transaction_direction":{
                        "type":"string"
                    },
                    "method_id":{
                        "type":"string"
                    },
                    "method_name":{
                        "type":"string"
                    },
                    "hash":{
                        "type":"object",
                        "properties":{
                            "hash":{
                                "type":"string"
                            },
                            "transaction_hash":{
                                "type":"string"
                            },
                            "block_hash":{
                                "type":"string"
                            }
                        }
                    },
                    "value":{
                        "type":"string"
                    },
                    "contract_address":{
                        "type":"string"
                    },
                    "input":{
                        "type":"string"
                    },
                    "fees":{
                        "type":"object",
                        "properties":{
                            "base_fee":{
                                "type":"number"
                            },
                            "priority_fee":{
                                "type":"number",
                                "description":"Pre-merge block gas prices equal to priority fees since there was no base_fee."
                            },
                            "cumulative_gas_used":{
                                "type":"string"
                            }
                        }
                    },
                    "is_error":{
                        "type":"string"
                    },
                    "err_code":{
                        "type":"string"
                    }
                }
            },
            "OptimismBridgeResponse":{
                "type":"object",
                "properties":{
                    "optimism_to_ethereum":{
                        "type":"object",
                        "properties":{
                            "message_nonce":{
                                "type":"integer"
                            },
                            "from_address":{
                                "type":"string",
                                "format":"hex"
                            },
                            "to_address":{
                                "type":"string",
                                "format":"hex"
                            },
                            "optimism_transaction_hash":{
                                "type":"string"
                            },
                            "date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "time_left":{
                                "type":"integer"
                            },
                            "ethereum_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "status":{
                                "type":"string",
                                "enum":[
                                    "N/A",
                                    "Relayed",
                                    "Ready for Relay"
                                ]
                            },
                            "withdrawal_data":{
                                "type":"object",
                                "description":"Deposit receipt introduced with bedrock",
                                "properties":{
                                    "nonce":{
                                        "type":"integer"
                                    },
                                    "target":{
                                        "type":"string",
                                        "format":"hex",
                                        "description":"Target address on L1."
                                    },
                                    "deposit_nonce":{
                                        "type":"integer"
                                    },
                                    "is_system_transaction":{
                                        "type":"boolean"
                                    }
                                }
                            }
                        }
                    },
                    "ethereum_to_optimism":{
                        "type":"object",
                        "properties":{
                            "ethereum_block_number":{
                                "type":"integer"
                            },
                            "queue_index":{
                                "type":"integer"
                            },
                            "from_address":{
                                "type":"string",
                                "format":"hex"
                            },
                            "to_address":{
                                "type":"string",
                                "format":"hex"
                            },
                            "optimism_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "guaranteed_gas":{
                                "type":"integer",
                                "format":"WEI",
                                "description":"Used after bedrock. (Purchasing guarantees)"
                            },
                            "date_time":{
                                "type":"string",
                                "format":"date-time"
                            },
                            "time_left":{
                                "type":"integer"
                            },
                            "ethereum_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "origin_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "status":{
                                "type":"string",
                                "enum":[
                                    "deposited",
                                    "confirmed"
                                ]
                            },
                            "deposit_receipt":{
                                "type":"object",
                                "description":"Deposit receipt introduced with bedrock",
                                "properties":{
                                    "bloom":{
                                        "type":"string"
                                    },
                                    "logs":{
                                        "type":"string"
                                    },
                                    "deposit_nonce":{
                                        "type":"integer"
                                    },
                                    "is_system_transaction":{
                                        "type":"boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OptimismTransactionResponse":{
                "type":"object",
                "properties":{
                    "chain_id":{
                        "type":"integer"
                    },
                    "position_in_block":{
                        "type":"string"
                    },
                    "nonce":{
                        "type":"string"
                    },
                    "block_number":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "from":{
                        "type":"string"
                    },
                    "to":{
                        "type":"string"
                    },
                    "type":{
                        "type":"string",
                        "enum":[
                            "L1-Deposit",
                            "L2-Withdrawal",
                            "Standard",
                            "Produced Block",
                            "ERC-20",
                            "ERC-721",
                            "ERC-1155",
                            "internal-tx"
                        ]
                    },
                    "transaction_direction":{
                        "type":"string"
                    },
                    "block_confirmations":{
                        "type":"integer"
                    },
                    "finalized":{
                        "type":"boolean"
                    },
                    "method_id":{
                        "type":"string"
                    },
                    "method_name":{
                        "type":"string"
                    },
                    "hash":{
                        "type":"object",
                        "properties":{
                            "hash":{
                                "type":"string"
                            },
                            "transaction_hash":{
                                "type":"boolean"
                            },
                            "block_hash":{
                                "type":"boolean"
                            },
                            "source_hash":{
                                "type":"string",
                                "format":"hex",
                                "description":"Uniquely identifies the origin of the Optimism deposit."
                            }
                        }
                    },
                    "value":{
                        "type":"string"
                    },
                    "contract_address":{
                        "type":"string"
                    },
                    "input":{
                        "type":"string"
                    },
                    "cumulative_gas_used":{
                        "type":"string"
                    },
                    "is_error":{
                        "type":"string"
                    },
                    "err_code":{
                        "type":"string"
                    },
                    "fees":{
                        "type":"object",
                        "properties":{
                            "base_fee":{
                                "type":"number"
                            },
                            "priority_fee":{
                                "type":"number",
                                "description":"Pre-bedrock block gas prices equal to priority fees since there was no base_fee."
                            },
                            "gas_price_bid":{
                                "type":"integer",
                                "description":"Gas price bid",
                                "example":1
                            },
                            "gas_price_paid":{
                                "type":"integer",
                                "description":"Gas price paid",
                                "example":12
                            },
                            "gas_used":{
                                "type":"integer",
                                "description":"Gas used",
                                "example":1
                            },
                            "poster_fee":{
                                "type":"integer",
                                "description":"Poster fee",
                                "example":1
                            },
                            "network_fee":{
                                "type":"integer",
                                "description":"Network fee",
                                "example":1
                            }
                        }
                    },
                    "ethereum_payload":{
                        "type":"object",
                        "properties":{
                            "block_confirmations_on_ethereum":{
                                "type":"integer"
                            },
                            "finalized":{
                                "type":"boolean"
                            },
                            "transaction_batch_index":{
                                "type":"integer"
                            },
                            "submission_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "state_batch_index":{
                                "type":"integer"
                            },
                            "state_root_submission_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "origin_transaction_hash":{
                                "type":"string",
                                "format":"hex"
                            },
                            "fees":{
                                "type":"object",
                                "properties":{
                                    "gas_price":{
                                        "type":"string",
                                        "format":"wei"
                                    },
                                    "fee_scalar":{
                                        "type":"string",
                                        "format":"wei"
                                    },
                                    "gas_used_by_transaction":{
                                        "type":"string",
                                        "format":"wei",
                                        "description":"Gas used by this transaction on Ethereum.(Obsolete after bedrock.)"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "EthereumEthstoreResponse":{
                "type":"object",
                "properties":{
                    "beaconchain_day":{
                        "type":"integer"
                    },
                    "day_start":{
                        "type":"string"
                    },
                    "day_end":{
                        "type":"string"
                    },
                    "epoch_start":{
                        "type":"string"
                    },
                    "epoch_end":{
                        "type":"string"
                    },
                    "deposits_sum":{
                        "type":"integer"
                    },
                    "effective_balances_sum":{
                        "type":"integer"
                    },
                    "end_balances_sum":{
                        "type":"integer"
                    },
                    "start_balances_sum":{
                        "type":"integer"
                    },
                    "rewards":{
                        "type":"object",
                        "properties":{
                            "today":{
                                "type":"object",
                                "properties":{
                                    "consensus_rewards":{
                                        "type":"integer"
                                    },
                                    "transaction_rewards":{
                                        "type":"integer"
                                    },
                                    "consenus_apr":{
                                        "type":"integer"
                                    },
                                    "execution_apr":{
                                        "type":"integer"
                                    },
                                    "total_apr":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "7d_average":{
                                "type":"object",
                                "properties":{
                                    "consensus_rewards":{
                                        "type":"integer"
                                    },
                                    "transaction_rewards":{
                                        "type":"integer"
                                    },
                                    "consenus_apr":{
                                        "type":"integer"
                                    },
                                    "execution_apr":{
                                        "type":"integer"
                                    },
                                    "total_apr":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "31d_average":{
                                "type":"object",
                                "properties":{
                                    "consensus_rewards":{
                                        "type":"integer"
                                    },
                                    "transaction_rewards":{
                                        "type":"integer"
                                    },
                                    "consenus_apr":{
                                        "type":"integer"
                                    },
                                    "execution_apr":{
                                        "type":"integer"
                                    },
                                    "total_apr":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "EthereumEthDailyPriceResponse":{
                "type":"object",
                "properties":{
                    "day":{
                        "type":"string",
                        "format":"date"
                    },
                    "price":{
                        "type":"object",
                        "properties":{
                            "etheur":{
                                "type":"number"
                            },
                            "ethusd":{
                                "type":"number"
                            },
                            "ethchf":{
                                "type":"number"
                            },
                            "ethaud":{
                                "type":"number"
                            },
                            "ethgbp":{
                                "type":"number"
                            }
                        }
                    }
                }
            },
            "EthereumBlockSizeResponse":{
                "type":"object",
                "properties":{
                    "date":{
                        "type":"string",
                        "format":"date"
                    },
                    "block_size_bytes":{
                        "type":"integer"
                    }
                }
            },
            "OptimismBlockSizeResponse":{
                "type":"object",
                "properties":{
                    "date":{
                        "type":"string",
                        "format":"date"
                    },
                    "block_size_bytes":{
                        "type":"integer"
                    }
                }
            },
            "EthereumAccountBalanceResponse":{
                "type":"object",
                "properties":{
                    "tokens":{
                        "type":"object",
                        "properties":{
                            "token_name":{
                                "type":"string"
                            },
                            "token_address":{
                                "type":"string"
                            },
                            "balance":{
                                "type":"integer"
                            },
                            "type":{
                                "type":"string",
                                "enum":[
                                    "ETH",
                                    "ERC-20",
                                    "ERC-721",
                                    "ERC-1155"
                                ]
                            }
                        }
                    },
                    "block_number":{
                        "type":"integer"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    }
                }
            },
            "OptimismAccountBalanceResponse":{
                "type":"object",
                "properties":{
                    "tokens":{
                        "type":"object",
                        "properties":{
                            "token_name":{
                                "type":"string"
                            },
                            "token_address":{
                                "type":"string"
                            },
                            "balance":{
                                "type":"integer"
                            },
                            "type":{
                                "type":"string",
                                "enum":[
                                    "ETH",
                                    "ERC-20",
                                    "ERC-721",
                                    "ERC-1155"
                                ]
                            }
                        }
                    },
                    "block_number":{
                        "type":"integer"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    }
                }
            },
            "EthereumDailyGasUsedResponse":{
                "type":"object",
                "properties":{
                    "date":{
                        "type":"string"
                    },
                    "gas_used":{
                        "type":"number"
                    }
                }
            },
            "EthereumDailyAvgGasLimitResponse":{
                "type":"object",
                "properties":{
                    "date":{
                        "type":"string"
                    },
                    "gas_limit":{
                        "type":"number"
                    }
                }
            },
            "EthereumGasNowResponse":{
                "type":"object",
                "properties":{
                    "rapid":{
                        "type":"integer"
                    },
                    "fast":{
                        "type":"integer"
                    },
                    "standard":{
                        "type":"integer"
                    },
                    "slow":{
                        "type":"integer"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "eth_usd":{
                        "type":"number"
                    }
                }
            },
            "EthereumTokenSupplyHistoryResponse":{
                "properties":{
                    "token_type":{
                        "type":"string"
                    },
                    "token_name":{
                        "type":"string"
                    },
                    "contract_address":{
                        "type":"string"
                    },
                    "token_supply":{
                        "type":"number"
                    },
                    "block_number":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format": "date-time"
                    }
                }
            },
            "OptimismTokenSupplyHistoryResponse":{
                "properties":{
                    "token_type":{
                        "type":"string"
                    },
                    "token_name":{
                        "type":"string"
                    },
                    "contract_address":{
                        "type":"string"
                    },
                    "token_supply":{
                        "type":"number"
                    },
                    "block_number":{
                        "type":"string"
                    },
                    "date_time":{
                        "type":"string",
                        "format":"date-time"
                    }
                }
            },
            "APIHealthResponse":{
                "type":"object",
                "properties":{
                    "network":{
                        "type":"object",
                        "properties":{
                            "ethereum":{
                                "type":"object",
                                "properties":{
                                    "last_import":{
                                        "type":"string"
                                    },
                                    "node_version":{
                                        "type":"string"
                                    },
                                    "notifications":{
                                        "type":"object",
                                        "properties":{
                                            "webhook_count":{
                                                "type":"integer"
                                            },
                                            "email_count":{
                                                "type":"integer"
                                            },
                                            "push_count":{
                                                "type":"integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "gnosis":{
                                "type":"object",
                                "properties":{
                                    "last_import":{
                                        "type":"string"
                                    },
                                    "node_version":{
                                        "type":"string"
                                    },
                                    "notifications":{
                                        "type":"object",
                                        "properties":{
                                            "webhook_count":{
                                                "type":"integer"
                                            },
                                            "email_count":{
                                                "type":"integer"
                                            },
                                            "push_count":{
                                                "type":"integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "optimism":{
                                "type":"object",
                                "properties":{
                                    "last_import":{
                                        "type":"string"
                                    },
                                    "node_version":{
                                        "type":"string"
                                    },
                                    "notifications":{
                                        "type":"object",
                                        "properties":{
                                            "webhook_count":{
                                                "type":"integer"
                                            },
                                            "email_count":{
                                                "type":"integer"
                                            },
                                            "push_count":{
                                                "type":"integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "EthereumValidatorRewardResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "epoch_start_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "daily":{
                        "type":"boolean"
                    },
                    "date":{
                        "type":"string",
                        "format":"date"
                    },
                    "rewards":{
                        "$ref":"#/components/schemas/EthereumValidatorReward"
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumValidatorReward":{
                "type":"object",
                "properties":{
                    "total_rewards":{
                        "type":"integer",
                        "format": "uint64"
                    },
                    "total_consensus_layer_rewards":{
                        "type":"integer"
                    },
                    "total_execution_layer_rewards":{
                        "type":"integer"
                    },
                    "total_proposer_consensus_layer_rewards":{
                        "type":"integer"
                    },
                    "total_proposer_execution_layer_rewards":{
                        "type":"integer"
                    },
                    "consensus_layer_details":{
                        "type":"object",
                        "properties":{
                            "attestation_head_reward":{
                                "type":"integer"
                            },
                            "attestation_source_reward":{
                                "type":"integer"
                            },
                            "attestation_source_penalty ":{
                                "type":"integer"
                            },
                            "attestation_target_reward":{
                                "type":"integer"
                            },
                            "attestation_target_penalty ":{
                                "type":"integer"
                            },
                            "finality_delay_penalty":{
                                "type":"integer"
                            },
                            "proposer_slashing_inclusion_reward":{
                                "type":"integer"
                            },
                            "proposer_attestation_inclusion_reward":{
                                "type":"integer"
                            },
                            "proposer_sync_inclusion_reward":{
                                "type":"integer"
                            },
                            "sync_committee_reward":{
                                "type":"integer"
                            },
                            "sync_committee_penalty":{
                                "type":"integer"
                            },
                            "slashing_reward":{
                                "type":"integer"
                            },
                            "slashing_penalty":{
                                "type":"integer"
                            }
                        }
                    },
                    "execution_layer_details":{
                        "type":"object",
                        "properties":{
                            "standard_blocks":{
                                "type":"object",
                                "properties":{
                                    "count":{
                                        "type":"integer"
                                    },
                                    "priority_fees":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "mev_blocks":{
                                "type":"object",
                                "properties":{
                                    "count":{
                                        "type":"integer"
                                    },
                                    "priority_fees":{
                                        "type":"integer"
                                    },
                                    "relay_reported_rewards":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "EthereumValidatorBalanceResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "epoch_start_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "daily":{
                        "type":"boolean"
                    },
                    "date":{
                        "type":"string",
                        "format":"date"
                    },
                    "balances":{
                        "$ref":"#/components/schemas/EthereumValidatorBalance"
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumValidatorBalance":{
                "type":"object",
                "properties":{
                    "start_balance":{
                        "type":"integer"
                    },
                    "start_effective_balance":{
                        "type":"integer"
                    },
                    "min_balance":{
                        "type":"integer"
                    },
                    "min_effective_balance":{
                        "type":"integer"
                    },
                    "max_balance":{
                        "type":"integer"
                    },
                    "max_effective_balance":{
                        "type":"integer"
                    },
                    "end_balance":{
                        "type":"integer"
                    },
                    "end_effective_balance":{
                        "type":"integer"
                    },
                    "beacon_deposits_count":{
                        "type":"integer"
                    },
                    "beacon_deposits_amount":{
                        "type":"integer"
                    },
                    "total_beacon_deposits_count":{
                        "type":"integer"
                    },
                    "total_beacon_deposits_amount":{
                        "type":"integer"
                    },
                    "contract_deposits_count":{
                        "type":"integer"
                    },
                    "contract_deposits_amount":{
                        "type":"integer"
                    },
                    "total_contract_deposits_count":{
                        "type":"integer"
                    },
                    "total_contract_deposits_amount":{
                        "type":"integer"
                    },
                    "withdrawals_count":{
                        "type":"integer"
                    },
                    "withdrawals_amount":{
                        "type":"integer"
                    }
                }
            },
            "EthereumValidatorDutiesResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "epoch_start_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "daily":{
                        "type":"boolean"
                    },
                    "date":{
                        "type":"string",
                        "format":"date"
                    },
                    "duties":{
                        "$ref":"#/components/schemas/EthereumValidatorDuties"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    },
                    "labels":{
                        "$ref":"#/components/schemas/ValidatorLabels"
                    }
                }
            },
            "EthereumValidatorDuties":{
                "type":"object",
                "properties":{
                    "attestations":{
                        "type":"object",
                        "properties":{
                            "scheduled_count":{
                                "type":"integer"
                            },
                            "executed_timely_head_count":{
                                "type":"integer"
                            },
                            "executed_timely_target_count":{
                                "type":"integer"
                            },
                            "executed_timely_source_count":{
                                "type":"integer"
                            },
                            "executed_rate":{
                                "type":"integer"
                            },
                            "orphaned_count":{
                                "type":"integer"
                            },
                            "missed_count":{
                                "type":"integer"
                            },
                            "effectiveness":{
                                "type":"integer"
                            }
                        }
                    },
                    "proposals":{
                        "type":"object",
                        "properties":{
                            "scheduled_count":{
                                "type":"integer"
                            },
                            "proposed_count":{
                                "type":"integer"
                            },
                            "proposed_rate":{
                                "type":"integer"
                            },
                            "orphaned_count":{
                                "type":"integer"
                            },
                            "missed_count":{
                                "type":"integer"
                            },
                            "included_attester_slashings_count":{
                                "type":"integer"
                            },
                            "included_proposer_slashings_count":{
                                "type":"integer"
                            }
                        }
                    },
                    "sync_committee":{
                        "type":"object",
                        "properties":{
                            "scheduled_count":{
                                "type":"integer"
                            },
                            "participated_count":{
                                "type":"integer"
                            },
                            "participated_rate":{
                                "type":"integer"
                            },
                            "missed_count":{
                                "type":"integer"
                            },
                            "orphaned_count":{
                                "type":"integer"
                            }
                        }
                    }
                }
            },
            "MobileSettingsDataResponse":{
                "type":"object",
                "properties":{
                    "notify_token":{
                        "type":"string"
                    }
                }
            },
            "SmartContractVerifyResponse":{
                "type":"object"
            },
            "SmartContractVerifyStatusResponse":{
                "type":"object"
            },
            "SubscriptionResponse":{
                "type":"object",
                "properties":{
                    "createdEpoch":{
                        "type":"integer"
                    },
                    "createdTime":{
                        "type":"string"
                    },
                    "eventFilter":{
                        "type":"string"
                    },
                    "eventName":{
                        "type":"string"
                    },
                    "eventThreshold":{
                        "type":"number"
                    },
                    "id":{
                        "type":"integer"
                    },
                    "lastEpoch":{
                        "type":"integer"
                    },
                    "lastSent":{
                        "type":"string"
                    },
                    "state":{
                        "type":"string"
                    },
                    "unsubscribeHash":{
                        "type":"string"
                    },
                    "userID":{
                        "type":"integer"
                    }
                }
            },
            "OAuthErrorResponse":{
                "type":"object",
                "properties":{
                    "error":{
                        "type":"string"
                    },
                    "error_description":{
                        "type":"string"
                    }
                }
            },
            "OAuthResponse":{
                "type":"object",
                "properties":{
                    "access_token":{
                        "type":"string"
                    },
                    "expires_in":{
                        "type":"integer"
                    },
                    "refresh_token":{
                        "type":"string"
                    },
                    "token_type":{
                        "type":"string"
                    }
                }
            },
            "StatsDataResponse":{
                "type":"object",
                "properties":{
                    "node":{
                        "type":"object"
                    },
                    "system":{
                        "type":"object"
                    },
                    "validator":{
                        "type":"object"
                    }
                }
            },
            "EthereumValidatorStatusesResponse":{
                "type":"object",
                "properties":{
                    "epoch":{
                        "type":"integer"
                    },
                    "date":{
                        "type":"string",
                        "format":"date"
                    },
                    "statuses":{
                        "$ref":"#/components/schemas/EthereumValidatorStatuses"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    }
                }
            },
            "EthereumValidatorStatuses":{
                "type":"object",
                "properties":{
                    "pending":{
                        "type":"object",
                        "properties":{
                            "total_pending_count":{
                                "type":"integer"
                            },
                            "pending_initialized_count":{
                                "type":"integer"
                            },
                            "pending_queued_count":{
                                "type":"integer"
                            }
                        }
                    },
                    "active":{
                        "type":"object",
                        "properties":{
                            "total_active_count":{
                                "type":"integer"
                            },
                            "active_ongoing_count":{
                                "type":"integer"
                            },
                            "active_exiting_count":{
                                "type":"integer"
                            },
                            "active_slashed_count":{
                                "type":"integer"
                            }
                        }
                    },
                    "exited":{
                        "type":"object",
                        "properties":{
                            "total_exited_count":{
                                "type":"integer"
                            },
                            "exited_unslashed_count":{
                                "type":"integer"
                            },
                            "exited_slashed_count":{
                                "type":"integer"
                            }
                        }
                    },
                    "withdrawal":{
                        "type":"object",
                        "properties":{
                            "total_withdrawal_count":{
                                "type":"integer"
                            },
                            "withdrawal_possible_count":{
                                "type":"integer"
                            },
                            "withdrawal_done_count":{
                                "type":"integer"
                            }
                        }
                    }
                }
            },
            "BLSChangeResponse":{
                "type":"object",
                "properties":{
                    "slot":{
                        "type":"integer"
                    },
                    "slot_date_time":{
                        "type":"string",
                        "format":"date-time"
                    },
                    "epoch":{
                        "type":"integer"
                    },
                    "block_root":{
                        "type":"string"
                    },
                    "validator_index":{
                        "type":"integer"
                    },
                    "bls_public_key":{
                        "type":"string"
                    },
                    "bls_signature":{
                        "type":"string"
                    },
                    "address":{
                        "type":"string"
                    },
                    "withdrawal_credentials_0x00":{
                        "type":"string"
                    },
                    "withdrawal_credentials_0x01":{
                        "type":"string"
                    },
                    "finality":{
                        "type":"string",
                        "enum":[
                            "not_finalized",
                            "justified",
                            "finalized"
                        ]
                    }
                }
            },
            "ValidatorLabels":{
                "type":"object",
                "properties":{
                    "pool_label":{
                        "type":"string"
                    },
                    "name_label":{
                        "type":"string"
                    }
                }
            },
            "QueueResponse":{
                "type":"object",
                "properties":{
                    "validators":{
                        "type":"object",
                        "properties":{
                            "total_count":{
                                "type":"integer"
                            },
                            "pending_queued_count":{
                                "type":"integer"
                            },
                            "active_exiting_count":{
                                "type":"integer"
                            }
                        }
                    },
                    "deposits":{
                        "type":"object",
                        "properties":{
                            "unprocessed_contract_deposits_count":{
                                "type":"integer"
                            },
                            "unprocessed_contract_deposits_amount":{
                                "type":"integer"
                            }
                        }
                    }
                }
            },
            "PerformanceResponse":{
                "type":"object",
                "properties":{
                    "validator_index":{
                        "type":"integer"
                    },
                    "validator_balance":{
                        "type":"integer"
                    },
                    "today":{
                        "type":"object",
                        "properties":{
                            "apr":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "1d":{
                        "type":"object",
                        "properties":{
                            "apr":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "7d":{
                        "type":"object",
                        "properties":{
                            "apr":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "31d":{
                        "type":"object",
                        "properties":{
                            "apr":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "365d":{
                        "type":"object",
                        "properties":{
                            "apr":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    },
                    "total":{
                        "type":"object",
                        "properties":{
                            "apr":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            },
                            "rewards":{
                                "type":"object",
                                "properties":{
                                    "total":{
                                        "type":"integer"
                                    },
                                    "consensus_layer":{
                                        "type":"integer"
                                    },
                                    "execution_layer":{
                                        "type":"integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SignatureRequestBody":{
              "type":"object",
              "properties":{
                "signature":{
                    "type":"string"
                }
              }
            },
            "SyncCommitteeResponse":{
              "type":"object",
              "properties":{
                "period":{
                    "type":"integer"
                },
                "start_epoch":{
                    "type":"integer"
                },
                "end_epoch ":{
                    "type":"integer"
                },
                "validators":{
                  "type":"array",
                    "items":{
                      "type":"integer"
                    }
                }
              }
            }
        }
    }
}